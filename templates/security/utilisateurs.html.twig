{% extends "base.html.twig" %}
{% block title %}
    Administration utilisateur
{% endblock title %}
{% block body %}

    <h2>UTILISATEURS</h2>

    <table id="grid-data" class="table table-condensed table-hover table-striped bootgrid-table">
        <thead>
            <tr>
                <th data-column-id="id" data-visible="false" data-sortable="false">Id</th>
                <th data-column-id="username">Nom d'utilisateur</th>
                <th data-column-id="nom">Nom</th>
                <th data-column-id="prenom">Prénom</th>
                <th data-column-id="roles">Roles</th>
                <th data-column-id="commands" data-formatter="commands" data-sortable="false">Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="row">
        <div class="col-md-6">
            <fieldset class="well">
                <legend class="well-legend">Créer un utilisateur</legend>
                {{ form_start(form_creation) }}
                {{ form_row(form_creation.username) }}
                {{ form_row(form_creation.nom) }}
                {{ form_row(form_creation.prenom) }}
                {{ form_row(form_creation.plainPassword) }}
                {{form_row(form_creation._token)}}
                <button name="creation" class="button btn" type="submit">Créer</button>
                {{ form_row(form_creation._token) }}
                {{ form_end(form_creation, {'render_rest' : false}) }}
            </fieldset>
        </div>
        <div class="col-md-6">
            <fieldset class="well">
                <legend class="well-legend">Modifier un utilisateur</legend>

                {{ form_start(form_modif) }}
                {{ form_row(form_modif.username, {'attr': {'autocomplete': 'off'}}) }}
                {{ form_row(form_modif.id_user) }}
                {{ form_row(form_modif.plainPassword, {'required' : false, 'attr': {'autocomplete': 'off'}}) }}
                {{ form_row(form_modif.roles, {"attr": {"class" : "basic-multiple-role"}}) }}
                <button name="modif" class="button btn" type="submit">Modifier</button>
                {{ form_end(form_modif) }}
            </fieldset>
        </div>
    </div>

    <div class="modal fade" id="confirm-submit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        <span class="glyphicon glyphicon-warning"></span>
                        Confirmation de suppression</h4>
                </div>
                <div class="modal-body">
                    <p>Êtes-vous sûr de vouloir supprimer cet utilisateur ?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default pull-left" data-dismiss="modal">
                        <span class="glyphicon glyphicon-remove"></span>
                        Annuler</button>
                    <form id="deleteForm" method="post" action="delete">
                        <input type="hidden" name="_method" value="DELETE">
                        <input type="hidden" name="_token" value="">
                        <button type="submit" data-toggle="modal" data-target="#confirm-submit" class="btn button-danger btn-left pull-right">
                            <span class="fas fa-trash"></span> Supprimer</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script>

        $('.basic-multiple-role').select2({placeholder: 'Rôles'});

        var grid = $("#grid-data").bootgrid({
            ajax: true,
            requestHandler: function (request) {
                request.id = "b0df282a-0d67-40e5-8558-c9e93b7befed";
                request.currentPage = $("#grid-data").bootgrid("getCurrentPage");
                request.rowCount = $("#grid-data").bootgrid("getRowCount");
                return request;
            },
            url: "{{ path('utilisateur_admin') }}",
            formatters: {
                "commands": function (column, row) {
                    return "<button type=\"button\" class=\"btn btn-xs btn-default command-edit\" data-row-id=\"" + row.id + "\"><span class=\"fas fa-pen\"></span></button> " + "<button type=\"button\" class=\"btn btn-xs btn-default command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fas fa-trash-alt\"></span></button>";
                }
            }
        }).on("loaded.rs.jquery.bootgrid", function () {
            /* Executes after data is loaded and rendered */
            grid.find(".command-edit").on("click", function (e) {
                var id = $(this).attr("data-row-id");
                $.ajax({
                    url: "{{ path('utilisateur_index_modif') }}",
                    type: "POST",
                    dataType: "json",
                    data: {
                        'id': id
                    },
                    async: true,
                    success: function (resp) {
                        var user = JSON.parse(resp);
                        $("#form_id_user").val(user.id);
                        $("#form_username").val(user.username);
                        $("#form_nom").val(user.nom);
                        $("#form_plainPassword").val('');
                        $("#form_roles").val(user.roles);
                        $("#form_roles").trigger('change');
                    }
                });
            }).end().find(".command-delete").on("click", function (e) {
                var url = "{{ path('utilisateur_remove', {'id': 'utilisateur-id'}) }}";
                var id = $(this).attr("data-row-id");
                url = url.replace('utilisateur-id', id)
                $('#deleteForm').attr('action', url);
                $('#confirm-submit').modal();
            });
        });

        // form creation
        $('button[name=creation]').on('click', function (e) {
            $('form[name=utilisateur]').submit(function () {
                e.preventDefault();
                $("#utilisateur_plainPassword").removeClass('is-invalid');
                $("#regex").remove();
                $("#len").remove();

                var regex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$/;
                var pass = $('#utilisateur_plainPassword').val();
                if (!regex.test(pass)) {

                    var msg = '<span id="regex" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message"> Doit contenir une majuscule, une minuscule et un chiffre.</span></span></span>';
                    $("#utilisateur_plainPassword").addClass('is-invalid').after(msg);
                    disableCreer();
                    return false;
                } else if (pass.length < 8) {

                    var msg = '<span id="len" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message"> Doit contenir au moins 8 caractères.</span></span></span>';
                    $("#utilisateur_plainPassword").addClass('is-invalid').after(msg);
                    disableCreer();
                    return false;
                }

                $.ajax({
                    type: "POST",
                    data: {
                        user: $(this).serializeArray()
                    },
                    url: "{{ path('utilisateur_index_create') }}",
                    success: function () {
                        $('form[name="utilisateur"]')[0].reset();
                        $("#grid-data").bootgrid('reload');
                    }
                });
                return false;
            });
        });

        function disableCreer() {
            $('button[name="creation"]').attr("disabled", true);

        }

        function enableCreer() {
            $('button[name="creation"]').prop("disabled", false);
        }

        function disableModifier() {
            $('button[name="modif"]').attr("disabled", true);

        }

        function enableModifier() {
            $('button[name="modif"]').prop("disabled", false);
        }

        // username_error
        $("#utilisateur_username").change(function () {
            $(this).parent().find('input, select').removeClass('is-invalid');
            $(this).parent().find(".invalid-feedback").remove();
            var username = $(this).val();
            $.ajax({
                url: "{{ path( 'utilisateur_username_error' ) }}",
                type: "POST",
                dataType: "json",
                data: {
                    "username": username
                },
                success: function (resp) {
                    if (resp) {
                        var msg = '<span class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message"> Cet identifiant est déjà attribué.</span></span></span>';
                        $("#utilisateur_username").addClass('is-invalid').after(msg);
                        disableCreer();

                    } else {
                        if (username) {
                            enableCreer();
                        }
                    }
                }
            });
        });

        // form modif
        $('button[name=modif]').on('click', function (e) {
            $('form[name=form]').submit(function () {
                e.preventDefault();
                $("#form_plainPassword").removeClass('is-invalid');
                $("#regex").remove();
                $("#len").remove();
                var regex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$/;
                var pass = $('#form_plainPassword').val();
                if (pass) {
                    if (!regex.test(pass)) {

                        var msg = '<span id="regex" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message"> Doit contenir une majuscule, une minuscule et un chiffre.</span></span></span>';
                        $("#form_plainPassword").addClass('is-invalid').after(msg);
                        disableModifier();
                        return false;
                    } else if (pass.length < 8) {

                        var msg = '<span id="len" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message"> Doit contenir au moins 8 caractères.</span></span></span>';
                        $("#form_plainPassword").addClass('is-invalid').after(msg);
                        disableModifier();
                        return false;
                    }
                }

                $.ajax({
                    type: "POST",
                    data: {
                        user: $(this).serializeArray()
                    },
                    url: "{{ path('utilisateur_index_modif_bis') }}",
                    success: function () {
                        $('form[name="form"]')[0].reset();
                        $("#form_roles").trigger('change');
                        $("#grid-data").bootgrid('reload');
                    }
                });
                return false;
            });
        });

        // password_error
        $("#form_plainPassword").keyup(function () {
            $("#form_plainPassword").parent().find('input, select').removeClass('is-invalid');
            $("#form_plainPassword").parent().find(".invalid-feedback").remove();
            enableModifier();
        });
    </script>

{% endblock %}